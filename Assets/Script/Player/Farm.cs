using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.IO;
using UnityEngine.UI;

public class Farm : MonoBehaviour
{

    public static Farm instance;

    private readonly int LUCK_CONSTANT = 50;

    public Slider farmSlider;
    [SerializeField]
    private bool farmable;

    public List<Item> tempItem;


    #region Config

    public static readonly int COMMON_CHANCE = 68;
    public static readonly int RARE_CHANCE = 87;
    public static readonly int LEGENDARY_CHANCE = 97;

    public static readonly int COMMON_COST_MULTIPLIER = 1;
    public static readonly int RARE_COST_MULTIPLIER = 3;
    public static readonly int LEGENDARY_COST_MULTIPLIER = 12;
    public static readonly int ANCIENT_COST_MULTIPLIER = 60;

    #endregion


    private Item[] itemsCommon1 /*, itemsRare1, itemsLegendary1, itemsAncient1 */;
    private Item[] itemsCommon2 /*, itemsRare2, itemsLegendary2, itemsAncient2 */;
    private Item[] itemsCommon3 /*, itemsRare3, itemsLegendary3, itemsAncient3 */;
    private Item[] itemsCommon4 /*, itemsRare4, itemsLegendary4, itemsAncient4 */;
    private Item[] itemsCommon5 /*, itemsRare5, itemsLegendary5, itemsAncient5 */;

    private void Awake()
    {
        if (instance == null) instance = this;
        tempItem = new List<Item>();
        GetItemResources();
        SetItemNameByLanguage();
    }

    private void GetItemResources()
    {
        itemsCommon1 = Resources.LoadAll<Item>("Item/AutoGenerated/Common/01");
        itemsCommon2 = Resources.LoadAll<Item>("Item/AutoGenerated/Common/02");
        itemsCommon3 = Resources.LoadAll<Item>("Item/AutoGenerated/Common/03");
        itemsCommon4 = Resources.LoadAll<Item>("Item/AutoGenerated/Common/04");
        itemsCommon5 = Resources.LoadAll<Item>("Item/AutoGenerated/Common/05");

    }

    private void SetItemNameByLanguage()
    {
        if (PlayerManager.instance.LANGUAGE == PlayerManager.DEVICE_LANGUAGE.EN)
        {
            NameAssetsEN();
        }
        else if (PlayerManager.instance.LANGUAGE == PlayerManager.DEVICE_LANGUAGE.KR)
        {
            NameAssetsKR();
        }
        else if (PlayerManager.instance.LANGUAGE == PlayerManager.DEVICE_LANGUAGE.JP)
        {
            NameAssetsJP();
        }
        else if (PlayerManager.instance.LANGUAGE == PlayerManager.DEVICE_LANGUAGE.CN)
        {
            NameAssetsCN();
        }
        else if (PlayerManager.instance.LANGUAGE == PlayerManager.DEVICE_LANGUAGE.CNT)
        {
            NameAssetsCNT();
        }
        else
        {
            NameAssetsEN();
        }
    }

    public void Init()
    {
        ResetSlider();
        farmable = true;
    }

    public List<Item> GetTempItem()
    {
        return tempItem;
    }

    private void Update()
    {
        if (GameManager.instance.IsPlaying && farmable && !Inventory.instance.IsFull())
        {
            farmSlider.value += Time.deltaTime;
        }
        if (farmSlider.value >= farmSlider.maxValue && !Inventory.instance.IsFull())
        {
            ResetSlider();
            Roll();
            UIManager.instance.OnDiscover();
            UIManager.instance.OffFarm();
        }
    }

    private void ResetSlider()
    {
        tempItem.Clear();
        farmSlider.value = 0;
        farmable = false;
    }

    #region ROLL AND PICK

    public void Roll()
    {
        if(PlayerManager.instance.GetNotification() >= 1){
            UIManager.instance.OnNotification();
        }
        else {
            UIManager.instance.OffNotification();
        }
        // Basic roll

        for (int i = 0; i < 1; i++)
        {
            tempItem.Add(PickItemFromAsset());
        }

        // Luck it out
        for (int j = 0; j < 3; j++)
        {
            var luck = Random.Range(1, 101);
            var luckStats = PlayerManager.instance.GetStatsLuckValue();
            if (luck <= LUCK_CONSTANT + luckStats)
            {
                tempItem.Add(PickItemFromAsset());
            }
        }
        RandomizeItemProps();
    }

    private void RandomizeItemProps()
    {
        foreach (Item item in tempItem)
        {
            item.SetRarityRamdomly();
            item.SetForgeLevelRandomly();
        }
    }

    public Item PickItemFromAsset()
    {
        var r = Random.Range(0, 5);
        if (r == 0)
        {
            return itemsCommon1[Random.Range(0, itemsCommon1.Length)];
        }
        else if (r == 1)
        {
            return itemsCommon2[Random.Range(0, itemsCommon2.Length)];
        }
        else if (r == 2)
        {
            return itemsCommon3[Random.Range(0, itemsCommon3.Length)];
        }
        else if (r == 3)
        {
            return itemsCommon4[Random.Range(0, itemsCommon4.Length)];
        }
        else if (r == 4)
        {
            return itemsCommon5[Random.Range(0, itemsCommon5.Length)];
        }
        else
        {
            return itemsCommon1[Random.Range(0, itemsCommon1.Length)];
        }
    }


    #endregion

    #region Localize


    public void NameAssetsEN()
    {

        string filePath1 = Path.Combine(Application.streamingAssetsPath, "en01.json");
        string filePath2 = Path.Combine(Application.streamingAssetsPath, "en02.json");
        string filePath3 = Path.Combine(Application.streamingAssetsPath, "en03.json");
        string filePath4 = Path.Combine(Application.streamingAssetsPath, "en04.json");
        string filePath5 = Path.Combine(Application.streamingAssetsPath, "en05.json");

        if (File.Exists(filePath1) && File.Exists(filePath2) && File.Exists(filePath3) && File.Exists(filePath4) && File.Exists(filePath5))
        {
            string dataAsJson1 = File.ReadAllText(filePath1);
            string dataAsJson2 = File.ReadAllText(filePath2);
            string dataAsJson3 = File.ReadAllText(filePath3);
            string dataAsJson4 = File.ReadAllText(filePath4);
            string dataAsJson5 = File.ReadAllText(filePath5);

            LocalizationData loadedData1 = JsonUtility.FromJson<LocalizationData>(dataAsJson1);
            LocalizationData loadedData2 = JsonUtility.FromJson<LocalizationData>(dataAsJson2);
            LocalizationData loadedData3 = JsonUtility.FromJson<LocalizationData>(dataAsJson3);
            LocalizationData loadedData4 = JsonUtility.FromJson<LocalizationData>(dataAsJson4);
            LocalizationData loadedData5 = JsonUtility.FromJson<LocalizationData>(dataAsJson5);

            for (int i = 0; i < loadedData1.items.Length; i++)
            {
                itemsCommon1[i].itemName = loadedData1.items[i].displayName;
            }

            for (int i = 0; i < loadedData2.items.Length; i++)
            {
                itemsCommon2[i].itemName = loadedData2.items[i].displayName;
            }

            for (int i = 0; i < loadedData3.items.Length; i++)
            {
                itemsCommon3[i].itemName = loadedData3.items[i].displayName;
            }

            for (int i = 0; i < loadedData4.items.Length; i++)
            {
                itemsCommon4[i].itemName = loadedData4.items[i].displayName;
            }

            for (int i = 0; i < loadedData5.items.Length; i++)
            {
                itemsCommon5[i].itemName = loadedData5.items[i].displayName;
            }

        }
    }

    public void NameAssetsKR()
    {
        string filePath1 = Path.Combine(Application.streamingAssetsPath, "kr01.json");
        string filePath2 = Path.Combine(Application.streamingAssetsPath, "kr02.json");
        string filePath3 = Path.Combine(Application.streamingAssetsPath, "kr03.json");
        string filePath4 = Path.Combine(Application.streamingAssetsPath, "kr04.json");
        string filePath5 = Path.Combine(Application.streamingAssetsPath, "kr05.json");

        if (File.Exists(filePath1) && File.Exists(filePath2) && File.Exists(filePath3) && File.Exists(filePath4) && File.Exists(filePath5))
        {
            string dataAsJson1 = File.ReadAllText(filePath1);
            string dataAsJson2 = File.ReadAllText(filePath2);
            string dataAsJson3 = File.ReadAllText(filePath3);
            string dataAsJson4 = File.ReadAllText(filePath4);
            string dataAsJson5 = File.ReadAllText(filePath5);
            LocalizationData loadedData1 = JsonUtility.FromJson<LocalizationData>(dataAsJson1);
            LocalizationData loadedData2 = JsonUtility.FromJson<LocalizationData>(dataAsJson2);
            LocalizationData loadedData3 = JsonUtility.FromJson<LocalizationData>(dataAsJson3);
            LocalizationData loadedData4 = JsonUtility.FromJson<LocalizationData>(dataAsJson4);
            LocalizationData loadedData5 = JsonUtility.FromJson<LocalizationData>(dataAsJson5);

            for (int i = 0; i < loadedData1.items.Length; i++)
            {
                itemsCommon1[i].itemName = loadedData1.items[i].displayName;
            }

            for (int i = 0; i < loadedData2.items.Length; i++)
            {
                itemsCommon2[i].itemName = loadedData2.items[i].displayName;
            }

            for (int i = 0; i < loadedData3.items.Length; i++)
            {
                itemsCommon3[i].itemName = loadedData3.items[i].displayName;
            }

            for (int i = 0; i < loadedData4.items.Length; i++)
            {
                itemsCommon4[i].itemName = loadedData4.items[i].displayName;
            }

            for (int i = 0; i < loadedData5.items.Length; i++)
            {
                itemsCommon5[i].itemName = loadedData5.items[i].displayName;
            }

        }
    }
    public void NameAssetsCN()
    {
        string filePath1 = Path.Combine(Application.streamingAssetsPath, "cn01.json");
        string filePath2 = Path.Combine(Application.streamingAssetsPath, "cn02.json");
        string filePath3 = Path.Combine(Application.streamingAssetsPath, "cn03.json");
        string filePath4 = Path.Combine(Application.streamingAssetsPath, "cn04.json");
        string filePath5 = Path.Combine(Application.streamingAssetsPath, "cn05.json");

        if (File.Exists(filePath1) && File.Exists(filePath2) && File.Exists(filePath3) && File.Exists(filePath4) && File.Exists(filePath5))
        {
            string dataAsJson1 = File.ReadAllText(filePath1);
            string dataAsJson2 = File.ReadAllText(filePath2);
            string dataAsJson3 = File.ReadAllText(filePath3);
            string dataAsJson4 = File.ReadAllText(filePath4);
            string dataAsJson5 = File.ReadAllText(filePath5);
            LocalizationData loadedData1 = JsonUtility.FromJson<LocalizationData>(dataAsJson1);
            LocalizationData loadedData2 = JsonUtility.FromJson<LocalizationData>(dataAsJson2);
            LocalizationData loadedData3 = JsonUtility.FromJson<LocalizationData>(dataAsJson3);
            LocalizationData loadedData4 = JsonUtility.FromJson<LocalizationData>(dataAsJson4);
            LocalizationData loadedData5 = JsonUtility.FromJson<LocalizationData>(dataAsJson5);

            for (int i = 0; i < loadedData1.items.Length; i++)
            {
                itemsCommon1[i].itemName = loadedData1.items[i].displayName;
            }

            for (int i = 0; i < loadedData2.items.Length; i++)
            {
                itemsCommon2[i].itemName = loadedData2.items[i].displayName;
            }

            for (int i = 0; i < loadedData3.items.Length; i++)
            {
                itemsCommon3[i].itemName = loadedData3.items[i].displayName;
            }

            for (int i = 0; i < loadedData4.items.Length; i++)
            {
                itemsCommon4[i].itemName = loadedData4.items[i].displayName;
            }

            for (int i = 0; i < loadedData5.items.Length; i++)
            {
                itemsCommon5[i].itemName = loadedData5.items[i].displayName;
            }

        }
    }
    public void NameAssetsJP()
    {
        string filePath1 = Path.Combine(Application.streamingAssetsPath, "jp01.json");
        string filePath2 = Path.Combine(Application.streamingAssetsPath, "jp02.json");
        string filePath3 = Path.Combine(Application.streamingAssetsPath, "jp03.json");
        string filePath4 = Path.Combine(Application.streamingAssetsPath, "jp04.json");
        string filePath5 = Path.Combine(Application.streamingAssetsPath, "jp05.json");

        if (File.Exists(filePath1) && File.Exists(filePath2) && File.Exists(filePath3) && File.Exists(filePath4) && File.Exists(filePath5))
        {
            string dataAsJson1 = File.ReadAllText(filePath1);
            string dataAsJson2 = File.ReadAllText(filePath2);
            string dataAsJson3 = File.ReadAllText(filePath3);
            string dataAsJson4 = File.ReadAllText(filePath4);
            string dataAsJson5 = File.ReadAllText(filePath5);
            LocalizationData loadedData1 = JsonUtility.FromJson<LocalizationData>(dataAsJson1);
            LocalizationData loadedData2 = JsonUtility.FromJson<LocalizationData>(dataAsJson2);
            LocalizationData loadedData3 = JsonUtility.FromJson<LocalizationData>(dataAsJson3);
            LocalizationData loadedData4 = JsonUtility.FromJson<LocalizationData>(dataAsJson4);
            LocalizationData loadedData5 = JsonUtility.FromJson<LocalizationData>(dataAsJson5);
            for (int i = 0; i < loadedData1.items.Length; i++)
            {
                itemsCommon1[i].itemName = loadedData1.items[i].displayName;
            }

            for (int i = 0; i < loadedData2.items.Length; i++)
            {
                itemsCommon2[i].itemName = loadedData2.items[i].displayName;
            }

            for (int i = 0; i < loadedData3.items.Length; i++)
            {
                itemsCommon3[i].itemName = loadedData3.items[i].displayName;
            }

            for (int i = 0; i < loadedData4.items.Length; i++)
            {
                itemsCommon4[i].itemName = loadedData4.items[i].displayName;
            }

            for (int i = 0; i < loadedData5.items.Length; i++)
            {
                itemsCommon5[i].itemName = loadedData5.items[i].displayName;
            }

        }
    }
    public void NameAssetsCNT()
    {
        string filePath1 = Path.Combine(Application.streamingAssetsPath, "cnt01.json");
        string filePath2 = Path.Combine(Application.streamingAssetsPath, "cnt02.json");
        string filePath3 = Path.Combine(Application.streamingAssetsPath, "cnt03.json");
        string filePath4 = Path.Combine(Application.streamingAssetsPath, "cnt04.json");
        string filePath5 = Path.Combine(Application.streamingAssetsPath, "cnt05.json");

        if (File.Exists(filePath1) && File.Exists(filePath2) && File.Exists(filePath3) && File.Exists(filePath4) && File.Exists(filePath5))
        {
            string dataAsJson1 = File.ReadAllText(filePath1);
            string dataAsJson2 = File.ReadAllText(filePath2);
            string dataAsJson3 = File.ReadAllText(filePath3);
            string dataAsJson4 = File.ReadAllText(filePath4);
            string dataAsJson5 = File.ReadAllText(filePath5);
            LocalizationData loadedData1 = JsonUtility.FromJson<LocalizationData>(dataAsJson1);
            LocalizationData loadedData2 = JsonUtility.FromJson<LocalizationData>(dataAsJson2);
            LocalizationData loadedData3 = JsonUtility.FromJson<LocalizationData>(dataAsJson3);
            LocalizationData loadedData4 = JsonUtility.FromJson<LocalizationData>(dataAsJson4);
            LocalizationData loadedData5 = JsonUtility.FromJson<LocalizationData>(dataAsJson5);

            for (int i = 0; i < loadedData1.items.Length; i++)
            {
                itemsCommon1[i].itemName = loadedData1.items[i].displayName;
            }

            for (int i = 0; i < loadedData2.items.Length; i++)
            {
                itemsCommon2[i].itemName = loadedData2.items[i].displayName;
            }

            for (int i = 0; i < loadedData3.items.Length; i++)
            {
                itemsCommon3[i].itemName = loadedData3.items[i].displayName;
            }

            for (int i = 0; i < loadedData4.items.Length; i++)
            {
                itemsCommon4[i].itemName = loadedData4.items[i].displayName;
            }

            for (int i = 0; i < loadedData5.items.Length; i++)
            {
                itemsCommon5[i].itemName = loadedData5.items[i].displayName;
            }
        }
    }


    #endregion

}


[System.Serializable]
public class LocalizationData
{
    public LocalizationItem[] items;
}

[System.Serializable]
public class LocalizationItem
{
    public string displayName;
    public string displayDesc;
}